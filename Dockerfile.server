# Use the Terraform image as the base
FROM hashicorp/terraform:1.5.5

# Install Python, Git, SSH client (includes ssh-agent), and other necessary tools
RUN apk add --no-cache \
    python3 \
    python3-dev \
    py3-pip \
    build-base \
    curl \
    unzip \
    zip \
    bash \
    git \
    openssh-client

# Upgrade pip
RUN pip install --no-cache-dir --upgrade pip

# Create .ssh directory and set up SSH config for GitHub
RUN mkdir -p /root/.ssh && \
    chmod 700 /root/.ssh

# Create SSH config file with proper newlines
# Using printf is more reliable for multiline strings in shell
RUN printf "Host github.com\n\
  HostName github.com\n\
  User git\n\
  IdentityFile /root/.ssh/id_git_rsa\n\
  StrictHostKeyChecking no\n\
  UserKnownHostsFile /dev/null\n" > /root/.ssh/config && \
    chmod 600 /root/.ssh/config

# Alternative: Pre-populate known_hosts for github.com
# This is more secure than StrictHostKeyChecking no, but requires network access during build.
# RUN ssh-keyscan github.com >> /root/.ssh/known_hosts && \
#     chmod 644 /root/.ssh/known_hosts
# If using ssh-keyscan, you could change StrictHostKeyChecking to 'yes' or remove it,
# and remove UserKnownHostsFile /dev/null in the config above.

# Set working directory for the application
WORKDIR /server

# Copy application files
COPY ./server /server

# Copy the entrypoint script
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Install application Python dependencies
RUN pip install --no-cache-dir -r /server/requirements.txt

ENV FLASK_ENV=development

EXPOSE 5000
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["python", "main.py"]
